//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CourseWork
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class CourseWorkEntities : DbContext
    {
        public CourseWorkEntities()
            : base("name=CourseWorkEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Color> Color { get; set; }
        public virtual DbSet<Form_Factor> Form_Factor { get; set; }
        public virtual DbSet<Material> Material { get; set; }
        public virtual DbSet<Reservation> Reservation { get; set; }
        public virtual DbSet<Table> Table { get; set; }
        public virtual DbSet<Table_Reservation> Table_Reservation { get; set; }
    
        public virtual ObjectResult<TableInfoOnDate_Result> TableInfoOnDate(Nullable<int> idTable, Nullable<System.DateTime> date)
        {
            var idTableParameter = idTable.HasValue ?
                new ObjectParameter("idTable", idTable) :
                new ObjectParameter("idTable", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TableInfoOnDate_Result>("TableInfoOnDate", idTableParameter, dateParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> CallAmounFunction(Nullable<System.DateTime> date)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("CallAmounFunction", dateParameter);
        }
    }
}
